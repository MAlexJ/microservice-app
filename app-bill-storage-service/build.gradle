plugins {
    id 'java'
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version "${springDependencyManagementVersion}"
    id "com.github.ben-manes.versions" version "${dependencyVersions}"
}

group = 'com.malexj'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = "${javaVersion}"
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "${cloudVersion}")
}

dependencies {
    implementation "me.paulschwarz:spring-dotenv:${paulschwarzDotenv}"
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springdocOpenapiWeb}"
    implementation "com.querydsl:querydsl-core:${querydslAptVersion}"
    implementation "com.querydsl:querydsl-jpa:${querydslAptVersion}:jakarta"
    runtimeOnly 'org.postgresql:postgresql'
    compileOnly 'org.projectlombok:lombok'
    implementation "org.liquibase:liquibase-core:${liquibaseVersion}"
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "com.querydsl:querydsl-apt:${querydslAptVersion}:jakarta"
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}